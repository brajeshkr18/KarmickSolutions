@model DemoModel.ViewModel.UserViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<div class="container">
    <div class="w3ls-title">
        <h3 class="agileits-title" style="font-size: 2em;">User Details</h3>
    </div>

    <div class="grid_3 grid_4 col-sm-12">


        <div class="tab-content">
            <div class="tab-pane active" id="horizontal-form">

                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">First Name</label>
                        @Html.TextBoxFor(m => m.FirstName, new
                   {
                       @class = "form-control1 input-sm",
                       @placeholder = "First Name",
                       required = "required",
                       @onkeypress = "return (event.charCode > 64 && event.charCode < 91) || (event.charCode > 96 && event.charCode < 123)"
                   })
                    </div>
                    <div class="col-sm-8">
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger", @id = "lblFirstName" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">Last Name</label>
                        @Html.TextBoxFor(m => m.LastName, new
                        {
                            @class = "form-control1 input-sm",
                       @placeholder = "Last Name",
                            required = "required"
                        })
                    </div>
                    <div class="col-sm-8">
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger", @id = "lblLastName" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">Email</label>
                        @Html.TextBoxFor(m => m.Email, new
                        {
                            @class = "form-control1 input-sm",
                       @placeholder = "Email",
                            required = "required",
                       autocomplete = "off",
                            @id = "txtEmail"
                   })
                    </div>
                    <div class="col-sm-8">
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger", @id = "lblEmail" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">Mobile Number</label>
                        @Html.TextBoxFor(m => m.PhoneNumber, new
                        {
                            @class = "form-control1 input-sm",
                       @placeholder = "Mobile Number",
                            required = "required",
                       autocomplete = "off"
                   })
                    </div>
                    <div class="col-sm-8">
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger", @id = "lblPhone" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">DepartMent</label>
                        @Html.DropDownList("DepartMent",
                    EnumHelper.GetSelectList(typeof(Utility.Enums.Designation)),
                    "Select DepartMent",
                    new { @class = "form-control1", @id = "DepartrmentId", onchange = "" })

                        <div class="col-sm-8">
                            @Html.ValidationMessageFor(m => m.DepartrmentId, "", new { @class = "text-danger", @id = "lblDepartment" })
                        </div>
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-2 control-label label-input-sm">Designation</label>
                        @Html.DropDownListFor(model => model.DesignationId,
                  new SelectList(new List<SelectListItem>
                   {
                       new SelectListItem { Text = "Please select department first" , Value = "0"},
                   }, "Value", "Text", "True"),
                       new { @class = "form-control1 ", @id = "DesignationId" })
                        <div class="col-sm-8">
                            @Html.ValidationMessageFor(m => m.DesignationId, "", new { @class = "text-danger", @id = "lblDesignation" })
                        </div>
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">Password</label>
                        @Html.PasswordFor(m => m.Password, new
                        {
                            @class = "form-control1 input-sm",
                       @placeholder = "Password",
                            required = "required",
                       autocomplete = "off",
                            @id = "txtPassword"
                   })
                    </div>
                    <div class="col-sm-8">
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger", @id = "lblPassword" })
                    </div>
                </div>
                <div class="form-group">

                    <div class="col-sm-8">
                        <label for="smallinput" class="col-sm-4 control-label label-input-sm">Confirm Password</label>
                        @Html.PasswordFor(m => m.ConfirmPassword, new
                        {
                            @class = "form-control1 input-sm",
                       @placeholder = "Confirm Password",
                            required = "required",
                       autocomplete = "off"
                   })
                    </div>
                    <div class="col-sm-8">
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger", @id = "lblConfirmpassword" })
                    </div>
                </div>
                <div>
                    <div>
                        <div class="col-sm-8">
                            <label for="smallinput" class="col-sm-4 control-label label-input-sm">UserType</label>

                        </div>
                        <div class="col-sm-8">
                            <input type="radio" id="Role1" name="UserTypeId" value="2">
                            <label for="age1">Admin</label>
                            <input type="radio" id="Role2" name="UserTypeId" value="3" checked="checked">
                            <label for="age2">User</label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-8">
                    <div class="date_btn" style="margin: 4em 0 0;text-align: center;">
                        <button id="btn_register" class="reg-button" type="button">Register</button>
                    </div>
                    <div class="date_btn" style="text-align: center;">
                        Already have account ?<a href="@Url.Action("Login", "Account")"> Login</a>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>
<script src="~/Assets/js/ErrorMessages.js"></script>
<script src="~/Assets/ApplicationJs/Account.Js"></script>